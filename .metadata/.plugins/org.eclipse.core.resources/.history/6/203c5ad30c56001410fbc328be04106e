package com.example.myapp;

import com.example.myapp.LoginActivity.UserLoginTask;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Typeface;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

@SuppressLint("ShowToast")
public class MainActivity extends Activity {
	private TextView title; 
	private View mProgressView;
	private UserLoginTask mAuthTask;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		title = (TextView)findViewById(R.id.textView1);
        Typeface AtomsFont = Typeface.createFromAsset(getAssets(), "fonts/univox.ttf");
        title.setTypeface(AtomsFont);
        title.setTextSize(30);
        mProgressView = findViewById(R.id.login_progress);
		
        mAuthTask = new UserLoginTask();
		// ใช้รหัส
		//Authenticate auth = new Authenticate("testg", "test", this);
		//ใช้ token
		Authenticate auth = new Authenticate(this);
		
		//แสดง token
		//Toast.makeText(this, auth.getToken(), 7000).show();
		if(!auth.isConnect())
		{
			Toast.makeText(this, "No Internet Connect.", 7000).show();
		}
		else if(auth.isLogin())
		{
			Toast.makeText(this, "yes", 7000).show();
		}
		else
		{
			Toast.makeText(this, "no", 7000).show();
			finish();
			Intent newActivity = new Intent(MainActivity.this,LoginActivity.class);
			startActivity(newActivity);
		}
		

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) 
		{
			return true;
		}
		else if(id == R.id.action_logout)
		{
			Authenticate auth = new Authenticate(this);
			if(auth.logout())
			{
				finish();
				Intent newActivity = new Intent(MainActivity.this,LoginActivity.class);
				startActivity(newActivity);
				return true;
			}
			else
			{
				return false;
			}
			
		}
		return super.onOptionsItemSelected(item);
	}
	public void showProgress(final boolean show) {
		// On Honeycomb MR2 we have the ViewPropertyAnimator APIs, which allow
		// for very easy animations. If available, use these APIs to fade-in
		// the progress spinner.
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR2) {
			int shortAnimTime = getResources().getInteger(
					android.R.integer.config_shortAnimTime);


			mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);
			mProgressView.animate().setDuration(shortAnimTime)
					.alpha(show ? 1 : 0)
					.setListener(new AnimatorListenerAdapter() {
						@Override
						public void onAnimationEnd(Animator animation) {
							mProgressView.setVisibility(show ? View.VISIBLE
									: View.GONE);
						}
					});
		} else {
			// The ViewPropertyAnimator APIs are not available, so simply show
			// and hide the relevant UI components.
			mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);
		}
	}
	
	public class UserLoginTask extends AsyncTask<Void, Void, Boolean> {

		private Context context;
		UserLoginTask(Context context) {
			this.context = context;
		}

		@Override
		protected Boolean doInBackground(Void... params) {
			// TODO: attempt authentication against a network service.

			Authenticate auth = new Authenticate(mEmail, mPassword, getApplicationContext());
			if(auth.isLogin())
			{
				return true;
			}
			else
			{
				return false;
			}
			

			// TODO: register the new account here.
			//return true;
		}

		@Override
		protected void onPostExecute(final Boolean success) {
			showProgress(false);

		}

	}
}
